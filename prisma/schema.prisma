// Configuration du générateur de client Prisma
generator client {
  provider = "prisma-client-js"
}

// Configuration de la base de données PostgreSQL
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // URL de connexion définie dans le fichier .env
}

// Énumération des rôles utilisateur
enum Role {
  USER  // Utilisateur normal
  ADMIN // Administrateur
}

// Modèle d'utilisateur
model User {
  id                  String    @id @default(cuid())  // Identifiant unique généré automatiquement
  email               String    @unique              // Email unique de l'utilisateur
  name                String?                        // Nom de l'utilisateur (optionnel)
  password            String                         // Mot de passe haché
  role                Role      @default(USER)       // Rôle de l'utilisateur (USER par défaut)
  isResettingPassword Boolean   @default(false)      // Indicateur de réinitialisation de mot de passe en cours
  resetPasswordToken  String?   @unique              // Token de réinitialisation de mot de passe (optionnel)
  photo               String?                        // URL de la photo de profil (optionnel)
  createdAt           DateTime  @default(now())      // Ajouter cette ligne
  
  // Relation avec les pointages (un utilisateur peut avoir plusieurs pointages)
  attendances Attendance[]
}

// Modèle de pointage
model Attendance {
  id         String    @id @default(cuid())       // Identifiant unique généré automatiquement
  userId     String                               // ID de l'utilisateur associé
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade) // Relation avec l'utilisateur (cascade = suppression des pointages si l'utilisateur est supprimé)
  clockIn    DateTime                             // Date et heure de l'arrivée
  clockOut   DateTime?                            // Date et heure du départ (optionnel)
  latitude   Float     @default(0.0)              // Latitude GPS du pointage
  longitude  Float     @default(0.0)              // Longitude GPS du pointage
  locationId String?   @map("location_id")        // ID du lieu de pointage (optionnel)
  location   Location? @relation(fields: [locationId], references: [id], onDelete: SetNull) // Relation avec le lieu (SetNull = relation mise à null si le lieu est supprimé)
  createdAt  DateTime  @default(now())            // Date et heure de création du pointage
}

// Modèle de lieu de pointage
model Location {
  id        String   @id @default(cuid())         // Identifiant unique généré automatiquement
  name      String   @unique                      // Nom unique du lieu
  latitude  Float                                 // Latitude GPS du lieu
  longitude Float                                 // Longitude GPS du lieu
  radius    Float                                 // Rayon de validation en mètres
  createdAt DateTime @default(now())              // Date et heure de création du lieu
  updatedAt DateTime @updatedAt                   // Date et heure de dernière mise à jour du lieu

  // Relation avec les pointages (un lieu peut avoir plusieurs pointages associés)
  attendances Attendance[]
}
